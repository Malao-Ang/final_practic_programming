# -*- coding: utf-8 -*-
"""programming_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ObP1xa_KXvCedd7BNbKvOhaaUl2Gnbt5
"""

#Name s_name password
name = input("ชื่อจริง").strip()
s_name = input('ใส่นามสกุล').strip()
print('Hello' + ' '+name +' '+s_name)
print(name[0:2]+s_name[0:2])

#strind data
date = input('ใส้วัน/เดือน/ปี').strip()
datenum = date.split('/')
print('Date: {} \nMount: {} \n Year: {}'.format(datenum[0],datenum[1],datenum[2]))

#strinf Password
name = input('ใส่ชื่ออจริง :').strip()
s_name = input('ใส่นามสกุล:').strip()
age = int(input('ใส่อายุ:'))
print('Your Password : {}{}{}'.format(name[0:2],s_name[-1],age))

#string format
name = input('ใส่ชื่อของคุณ:').strip()
print(name.swapcase())
print(name.capitalize())
print(name.capitalize())
name.capitalize()
for i in name:
  name = name.lstrip(i)
  print(name)

#Sumlist
n = int(input())
num = [0]*n
sum = 0
for i in range(n):
  num[i] = int(input())
  sum = sum + num[i]
ave = sum/n
print(num)
print(sum)
print(ave)

#comparelist
n = int(input())
num = [0]*n
count = 0
for i in range(n):
  num[i] = int(input('input number :'))
  if num[i] > 50:
    count+= 1

print(num)
print(count)

#finding index
n = int(input())
num = [0]*n
count = 0
for i in range(n):
  num[i] = int(input())

find = int(input('ใส่เลขที่ต้องการค้นหา'))
for i in range(n):
  if num[i] == find:
    count +=1
  if num != find:
    count = -1

print(num)
print(count)

#add matrix
row = 2
column = 2
m1 = [[0,0],[0,0]]
m2=[[0,0],[0,0]]
sum = [[0,0],[0,0]]

for i in range(row):
  for j in range(column):
    m1[i][j] = int(input())

for i in range(row):
  for j in range(column):
    m2[i][j] = int(input())

for i in range(row):
  for j in range(column):
    sum[i][j] = m1[i][j]+m2[i][j]

print('---------------------')
for i in range(row):
  for j in range(column):
    print(sum[i][j],end = ' ')
  print()

#matrix transpose
row =  int(input('ใส่จำนวนแถว'))
column = int(input('ใส่จำนวนcolumn :'))
m1 = [[0 for j in range(column)] for i in range(row)]


for i in range(row):
  for j in range(column):
    m1[i][j] = int(input())
print('Normal')
for i in range(row):
  for j in range(column):
    print(m1[i][j],end=' ')
  print()

print('Transpost')
for j in range(column):
  for i in range(row):
    print(m1[i][j],end=' ')
  print()

#ox_revers
row =  int(input('ใส่จำนวนแถว : '))
column = int(input('ใส่จำนวนcolumn :'))
sym = [['' for j in range(column)] for i in range(row)]


for i in range(row):
  for j in range(column):
    sym[i][j] = input().strip().lower()

for i in range(row):
  for j in range(column):
    print(sym[i][j],end=' ')
  print()


print('------------')
for i in range(row):
  for j in range(column):
    if sym[i][j] == 'x':
      sym[i][j] = 'o'
    else:
      sym[i][j] = 'x'

for i in range(row):
  for j in range(column):
    print(sym[i][j],end=' ')
  print()

#tem chag
import math
n = int(input('โปรดเลือก ชนิดอุณหภูมิที่ต้องการใส่ :'))

def FtoC ():
  tem = float(input())
  tem = (5/9)*(tem-32)
  print(round(tem,2))

def C_to_F ():
  tem = float(input())
  tem = ((9/5)*tem)+32
  print(round(tem,2))

#main
if n == 1:
  C_to_F()
if n == 2:
  FtoC()

#list Value
n = int(input())
num_list = [0]*n

def check():
  for i in range(n):
    if num_list[i] <10 :
      num_list[i] += 1
    if num_list[i] >= 10:
      num_list[i] -= 1
#main
for i in range(n):
  num_list[i] = int(input())
print('befor')
print(num_list)
print('After')
check()
print(num_list)

#transpost function
#matrix transpose
row =  int(input('ใส่จำนวนแถว'))
column = int(input('ใส่จำนวนcolumn :'))
m1 = [[0 for j in range(column)] for i in range(row)]

def Nor():
  for i in range(row):
    for j in range(column):
      m1[i][j] = int(input())

def pri_nor():
  print('Normal')
  for i in range(row):
    for j in range(column):
      print(m1[i][j],end=' ')
    print()

def transpost():
  for j in range(column):
    for i in range(row):
      print(m1[i][j],end=' ')
    print()

Nor()
pri_nor()
print('Transpost')
transpost()

#ox function
row =  int(input('ใส่จำนวนแถว : '))
column = int(input('ใส่จำนวนcolumn :'))
sym = [['' for j in range(column)] for i in range(row)]

def ox():
  for i in range(row):
    for j in range(column):
      sym[i][j] = input().strip().lower()

  for i in range(row):
    for j in range(column):
      print(sym[i][j],end=' ')
    print()


def xo():
  for i in range(row):
    for j in range(column):
      if sym[i][j] == 'x':
        sym[i][j] = 'o'
      else:
        sym[i][j] = 'x'

  for i in range(row):
    for j in range(column):
      print(sym[i][j],end=' ')
    print()

ox()
print('------------')
xo()

def G (n,m):
  if m>n:
    return -1
  if m==n :
    return 1
  else:
    return m*G(n,m+1)

#main
n = int(input())
m = int(input())
G(n,m)

def gcd (x,y):
  if x<y:
    return gcd(y,x)
  elif y==0:
    return x
  else:
    return gcd(y,x%y)

#main
x = int(input())
y = int(input())
gcd(x,y)

def f(x,y):
  if x>y:
    return f(x-1,y+1)+2
  elif y>x:
    return f(x,y-1)+1
  elif x==y:
    return 1

#main
x = int(input())
y = int(input())
f(x,y)

#กระต่ายอ้วน
n_w = [0]*n
n_w_ = [0]*n
w = 0
n = int(input())
sum = 0
over = []
count = 0
for i in range(n):
  n_w[i] = input().strip()
  n_w_[i] = n_w[i].split(' ')
  w = int(n_w_[i][1])
  '''print(w)
  print(type(w))'''

  if w > sum :
    over = n_w[i]
    sum = w
    '''print(sum)
    print(over)'''
  if w > 15 :
    count += 1

print(over)
print(count)